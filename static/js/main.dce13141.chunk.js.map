{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showClickToStart","buffSize","numChannels","audioSliceSize","z_pos","y_rot","filter1_vsh","filter1_fsh","scene","camera","renderer","canvas_area","video","createObjectURL","videoImage","videoImageContext","videoTexture","movieMaterial","audioDataQueue","audioFreqQueue","audioFreqSlice","fullscreen","flipVideoHorizontally","bind","assertThisInitialized","SceneUtils","createMultiMaterialObject","geometry","materials","group","THREE","i","l","length","add","detach","child","parent","applyMatrix","matrixWorld","remove","attach","getInverse","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element","setTimeout","navigator","getUserMedia_","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","URL","webkitURL","stream","AudioContext","webkitAudioContext","mozAudioContext","msAudioContext","vertexPath","fragmentPath","fetch","then","res","text","vertex","fragment","init","threeRootElement","document","addEventListener","_this2","setState","documentElement","requestFullscreen","play","e","keyCode","exitFullscreen","loadShaders","shaders","w","h","view_angle","aspect","near","far","position","set","rotation","y","Math","PI","WebGLRenderingContext","antialias","alpha","console","log","setSize","setClearColor","appendChild","domElement","light","createElement","crossOrigin","optional","minWidth","minHeight","audio","processVideo","animate","processAudio","error","msg","src","srcObject","load","muted","width","height","sizeMultiplier","getContext","fillStyle","fillRect","minFilter","magFilter","uniforms","tDiffuse","type","value","uAudioData","Float32Array","uAudioFreq","vertexShader","fragmentShader","side","transparent","movieMaterials","movieGeometry","floor","movieScreen","_this3","audioContext","mediaStreamSource","createMediaStreamSource","recorder","createScriptProcessor","analyser","createAnalyser","fftSize","onaudioprocess","s","key","inputBuffer","getChannelData","r","out_l","outputBuffer","out_r","push","slice","frequencyBinCount","getFloatFrequencyData","abs","needsUpdate","onended","disconnect","destination","connect","renderThree","update","readyState","HAVE_ENOUGH_DATA","drawImage","render","innerWidth","innerHeight","updateProjectionMatrix","_this4","react_default","a","className","id","ref","onClick","Component","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dce13141.chunk.js","sourcesContent":["/*\n\tA GLSL video filter example which uses webcam and microphone input.\n\t\n\tCopyright Jeremy Carter (Jeremy@JeremyCarter.ca) 2019\n\t\n  See the LICENSE file in this project's root directory for license\n  details.\n*/\n\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport './App.css';\n\nclass App extends Component {\n  static async loadShaders(vertexPath, fragmentPath) {\n    const vertex = await fetch(vertexPath).then(res => res.text());\n    const fragment = await fetch(fragmentPath).then(res => res.text());\n\n    return { vertex, fragment };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showClickToStart: true\n    }\n\n    this.buffSize = 2048;\n    this.numChannels = 2;\n    this.audioSliceSize = 32;\n    this.z_pos = -290;\n    this.y_rot = 180;\n    this.filter1_vsh = null;\n    this.filter1_fsh = null;\n    this.scene = null;\n    this.camera = null;\n    this.renderer = null;\n    this.canvas_area = null;\n    this.video = null;\n    this.createObjectURL = null;\n    this.videoImage = null;\n    this.videoImageContext = null;\n    this.videoTexture = null;\n    this.movieMaterial = null;\n    this.audioDataQueue = [];\n    this.audioFreqQueue = [];\n    this.audioFreqSlice = [];\n    this.fullscreen = false;\n\n    this.flipVideoHorizontally = this.flipVideoHorizontally.bind(this);\n\n    this.SceneUtils = {\n\n      createMultiMaterialObject: (geometry, materials) => {\n        const group = new THREE.Group();\n\n        for (var i = 0, l = materials.length; i < l; i++) {\n          group.add(new THREE.Mesh(geometry, materials[i]));\n        }\n\n        return group;\n      },\n\n      detach: (child, parent, scene) => {\n        child.applyMatrix(parent.matrixWorld);\n        parent.remove(child);\n        scene.add(child);\n      },\n\n      attach: (child, scene, parent) => {\n        child.applyMatrix(new THREE.Matrix4().getInverse(parent.matrixWorld));\n\n        scene.remove(child);\n        parent.add(child);\n      }\n    };\n\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = (() => {\n        return window.webkitRequestAnimationFrame ||\n          window.mozRequestAnimationFrame ||\n          window.oRequestAnimationFrame ||\n          window.msRequestAnimationFrame ||\n          ((callback, element) => {\n            window.setTimeout(callback, 1000 / 60);\n          });\n      })();\n    }\n\n    navigator.getUserMedia_ = (navigator.getUserMedia\n      || navigator.webkitGetUserMedia\n      || navigator.mozGetUserMedia\n      || navigator.msGetUserMedia);\n\n    window.createObjectURL = (window.URL || window.webkitURL || {}).createObjectURL || ((stream) => { });\n\n    window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext;\n  }\n\n  componentDidMount() {\n    this.init(this.threeRootElement);\n  }\n\n  async init(threeRootElement) {\n    document.addEventListener('click', () => {\n      this.setState(() => ({\n        showClickToStart: false\n      }), () => {\n        if (!this.fullscreen) {\n          document.documentElement.requestFullscreen();\n        }\n\n        this.video.play();\n      });\n    });\n\n    document.addEventListener('keypress', (e) => {\n      if (e.keyCode === 13 && this.fullscreen) {\n        document.exitFullscreen();\n      }\n    });\n\n    this.shaders = await App.loadShaders(\"shaders/filter1.vsh\", \"shaders/filter1.fsh\");\n\n    this.scene = new THREE.Scene();\n\n    this.w = 640;\n    this.h = 480;\n    this.view_angle = 45.0;\n    this.aspect = this.w / this.h;\n    this.near = 0.1;\n    this.far = 20000.0;\n    this.camera = new THREE.PerspectiveCamera(this.view_angle, this.aspect, this.near, this.far);\n    this.camera.position.set(0, 0, this.z_pos);\n    this.camera.rotation.y = this.y_rot * Math.PI / 180;\n    this.scene.add(this.camera);\n\n    if (window.WebGLRenderingContext) {\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n    } else {\n      console.log(\"WebGL not supported by your browser or gpu driver. Falling back to canvas rendering.\");\n      this.renderer = new THREE.CanvasRenderer();\n    }\n\n    this.renderer.setSize(this.w, this.h);\n    this.renderer.setClearColor(0x000000, 1);\n    threeRootElement.appendChild(this.renderer.domElement);\n\n    this.light = new THREE.PointLight(0xffffff);\n    this.light.position.set(0, 250, 0);\n    this.scene.add(this.light);\n\n    this.video = document.createElement('video');\n    this.video.crossOrigin = \"anonymous\";\n\n    if (!!navigator.getUserMedia_) {\n      navigator.getUserMedia_({\n        video: {\n          optional: [\n            { minWidth: 640 },\n            { minHeight: 480 }\n          ]\n        },\n\n        audio: false\n      },\n        (stream) => {\n          this.processVideo(stream);\n          this.animate();\n\n          navigator.getUserMedia_({\n            audio: true\n          },\n            (stream) => {\n              this.processAudio(stream);\n            },\n            (error) => {\n              const msg = \"Failed to get a stream due to \" + error;\n              console.log(msg);\n            });\n        },\n        (error) => {\n          const msg = \"Failed to get a stream due to \" + error;\n          console.log(msg);\n          this.video.src = '';\n        });\n    } else {\n      console.log(\"Error: navigator.getUserMedia not found.\");\n      return;\n    }\n  }\n\n  processVideo(stream) {\n    this.video.srcObject = stream;\n    this.video.load();\n\n    this.video.muted = true;\n\n    this.videoImage = document.createElement('canvas');\n    this.videoImage.width = 640;\n    this.videoImage.height = 480;\n\n    this.sizeMultiplier = 0.5;\n\n    this.videoImageContext = this.videoImage.getContext('2d');\n    this.videoImageContext.fillStyle = '#000000';\t// fallback background color\n    this.videoImageContext.fillRect(0, 0, this.videoImage.width, this.videoImage.height);\n\n    this.videoTexture = new THREE.Texture(this.videoImage);\n    this.videoTexture.minFilter = THREE.LinearFilter;\n    this.videoTexture.magFilter = THREE.LinearFilter;\n\n    this.movieMaterial = new THREE.ShaderMaterial({\n      uniforms: {\n        tDiffuse: { type: \"t\", value: this.videoTexture },\n        uAudioData: { type: \"1fv\", value: new Float32Array(this.audioSliceSize) },\n        uAudioFreq: { type: \"1fv\", value: new Float32Array(this.audioSliceSize) }\n      },\n      vertexShader: this.shaders.vertex,\n      fragmentShader: this.shaders.fragment,\n      side: THREE.DoubleSide,\n      transparent: true\n    });\n\n    this.movieMaterials = [\n      this.movieMaterial,\n    ];\n\n    this.movieGeometry = new THREE.PlaneGeometry(Math.floor(this.videoImage.width * this.sizeMultiplier), Math.floor(this.videoImage.height * this.sizeMultiplier), 4, 4);\n    this.movieScreen = new this.SceneUtils.createMultiMaterialObject(this.movieGeometry, this.movieMaterials);\n    this.movieScreen.position.set(0, 0, 0);\n\n    this.scene.add(this.movieScreen);\n  }\n\n  processAudio(stream) {\n    this.audioContext = new AudioContext();\n    this.mediaStreamSource = this.audioContext.createMediaStreamSource(stream);\n    this.recorder = this.audioContext.createScriptProcessor(this.buffSize, 2, 2);\n\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = this.buffSize;\n\n    this.recorder.onaudioprocess = (s) => {\n      this.l = s.inputBuffer.getChannelData(0);\n      this.r = s.inputBuffer.getChannelData(1);\n\n      this.out_l = s.outputBuffer.getChannelData(0);\n      this.out_r = s.outputBuffer.getChannelData(1);\n\n      this.audioDataQueue = [];\n\n      for (let key in this.l) {\n\n        this.audioDataQueue.push(this.l[key]);\n        this.audioDataQueue.push(this.r[key]);\n\n        //out_l[key] = l[key];  // NOTE: uncomment these two lines if you want sound output.\n        //out_r[key] = r[key];\n      }\n\n      this.movieMaterial.uniforms.uAudioData.value = new Float32Array(this.audioDataQueue.slice(0, this.audioSliceSize));\n\n      this.audioFreqQueue = new Float32Array(this.analyser.frequencyBinCount);\n      this.analyser.getFloatFrequencyData(this.audioFreqQueue);\n\n      this.audioFreqSlice = [];\n      for (let i = 0; i < this.audioSliceSize; i++) {\n        this.audioFreqSlice.push(1.0 - (Math.abs(this.audioFreqQueue[i]) / 128.0));\n      }\n\n      this.movieMaterial.uniforms.uAudioFreq.value = new Float32Array(this.audioFreqSlice);\n\n      if (this.videoTexture) {\n        this.videoTexture.needsUpdate = true;\n      }\n    };\n\n    this.mediaStreamSource.onended = () => {\n      this.mediaStreamSource.disconnect(this.analyser);\n      this.analyser.disconnect(this.recorder);\n      this.recorder.disconnect(this.audioContext.destination);\n    };\n\n    this.mediaStreamSource.connect(this.analyser);\n    this.analyser.connect(this.recorder);\n    this.recorder.connect(this.audioContext.destination);\n  }\n\n  animate() {\n    window.requestAnimationFrame(this.animate.bind(this));\n    this.renderThree();\n    this.update();\n  }\n\n  renderThree() {\n    if (this.video.readyState === this.video.HAVE_ENOUGH_DATA) {\n      this.videoImageContext.drawImage(this.video, 0, 0);\n\n      if (this.videoTexture) {\n        this.videoTexture.needsUpdate = true;\n      }\n    }\n\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  update() {\n    this.renderer.setSize(window.innerWidth * 0.997, window.innerHeight * 0.997);\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n  }\n\n  flipVideoHorizontally() {\n    console.log('Flipping video horizontally.');\n\n    if (this.camera.rotation.y >= 360) {\n      this.camera.rotation.y = 0 * Math.PI / 180;\n    }\n\n    this.camera.rotation.y += this.y_rot * Math.PI / 180;\n    this.z_pos = -this.z_pos;\n    this.camera.position.set(0, 0, this.z_pos);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.showClickToStart\n          ? (\n            <div\n              id=\"click_to_start\"\n            >\n              Click or tap anywhere to start the Telephone Sound audio-reactive camera filter.\n            </div>\n          )\n          : null}\n\n        <div\n          ref={element => this.threeRootElement = element}\n          onClick={this.flipVideoHorizontally}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}